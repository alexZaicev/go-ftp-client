// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	ftpconnection "github.com/alexZaicev/go-ftp-client/internal/adapters/ftpconnection"
	mock "github.com/stretchr/testify/mock"
)

// Option is an autogenerated mock type for the Option type
type Option struct {
	mock.Mock
}

// Execute provides a mock function with given fields: conn
func (_m *Option) Execute(conn *ftpconnection.ServerConnection) error {
	ret := _m.Called(conn)

	var r0 error
	if rf, ok := ret.Get(0).(func(*ftpconnection.ServerConnection) error); ok {
		r0 = rf(conn)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewOption interface {
	mock.TestingT
	Cleanup(func())
}

// NewOption creates a new instance of Option. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOption(t mockConstructorTestingTNewOption) *Option {
	mock := &Option{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
