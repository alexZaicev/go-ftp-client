// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	ftp "github.com/alexZaicev/go-ftp-client/internal/usecases/ftp"
	mock "github.com/stretchr/testify/mock"
)

// DownloadUseCase is an autogenerated mock type for the DownloadUseCase type
type DownloadUseCase struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1, _a2
func (_m *DownloadUseCase) Execute(_a0 context.Context, _a1 *ftp.DownloadRepos, _a2 *ftp.DownloadInput) error {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *ftp.DownloadRepos, *ftp.DownloadInput) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewDownloadUseCase interface {
	mock.TestingT
	Cleanup(func())
}

// NewDownloadUseCase creates a new instance of DownloadUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDownloadUseCase(t mockConstructorTestingTNewDownloadUseCase) *DownloadUseCase {
	mock := &DownloadUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
