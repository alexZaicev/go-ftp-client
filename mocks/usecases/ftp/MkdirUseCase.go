// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	ftp "github.com/alexZaicev/go-ftp-client/internal/usecases/ftp"
	mock "github.com/stretchr/testify/mock"
)

// MkdirUseCase is an autogenerated mock type for the MkdirUseCase type
type MkdirUseCase struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, repos, input
func (_m *MkdirUseCase) Execute(ctx context.Context, repos *ftp.MkdirRepos, input *ftp.MkdirInput) error {
	ret := _m.Called(ctx, repos, input)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *ftp.MkdirRepos, *ftp.MkdirInput) error); ok {
		r0 = rf(ctx, repos, input)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMkdirUseCase interface {
	mock.TestingT
	Cleanup(func())
}

// NewMkdirUseCase creates a new instance of MkdirUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMkdirUseCase(t mockConstructorTestingTNewMkdirUseCase) *MkdirUseCase {
	mock := &MkdirUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
